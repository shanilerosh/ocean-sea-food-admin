[{"/home/shanil/web/ocean-fish-admin/src/index.js":"1","/home/shanil/web/ocean-fish-admin/src/App.js":"2","/home/shanil/web/ocean-fish-admin/src/components/Header.js":"3","/home/shanil/web/ocean-fish-admin/src/components/Login.js":"4","/home/shanil/web/ocean-fish-admin/src/components/Customer.js":"5","/home/shanil/web/ocean-fish-admin/src/components/Order.js":"6","/home/shanil/web/ocean-fish-admin/src/components/OrderDetail.js":"7","/home/shanil/web/ocean-fish-admin/src/components/OrderFilterForm.js":"8"},{"size":298,"mtime":1609930444135,"results":"9","hashOfConfig":"10"},{"size":1373,"mtime":1610212375899,"results":"11","hashOfConfig":"10"},{"size":719,"mtime":1609939030341,"results":"12","hashOfConfig":"10"},{"size":3823,"mtime":1609959141566,"results":"13","hashOfConfig":"10"},{"size":7527,"mtime":1609991599932,"results":"14","hashOfConfig":"10"},{"size":815,"mtime":1610219242891,"results":"15","hashOfConfig":"10"},{"size":1024,"mtime":1610217612072,"results":"16","hashOfConfig":"10"},{"size":454,"mtime":1610217254549,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"21"},"6vtc8o",{"filePath":"22","messages":"23","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"21"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"21"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"30","usedDeprecatedRules":"21"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"21"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"21"},"/home/shanil/web/ocean-fish-admin/src/index.js",["43"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport Popper from \"popper.js\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n",["44","45"],"/home/shanil/web/ocean-fish-admin/src/App.js",["46","47","48","49","50","51"],"import React, { useEffect, useState } from \"react\";\nimport { ToastContainer } from \"react-toastify\";\nimport Header from \"./components/Header\";\nimport Login from \"./components/Login\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport Customer from \"./components/Customer\";\nimport Order from \"./components/Order\";\nimport io from \"socket.io-client\";\nimport { Button } from \"react-bootstrap\";\nimport OrderFilterForm from \"./components/OrderFilterForm\";\n\nconst socket = io(\"ws://localhost:1234\", {\n  transports: [\"websocket\", \"polling\"],\n});\n\nsocket.on(\"broadcast\", (data) => {\n  console.log(\"Called Here\", data);\n});\n\nconst App = () => {\n  const [text, setText] = useState(\"\");\n\n  return (\n    <div>\n      <ToastContainer\n        position=\"top-left\"\n        autoClose={5000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n      />\n      <BrowserRouter>\n        <Switch>\n          <Route path=\"/\">\n            <Header />\n            <Order />\n          </Route>\n          <Route path=\"/login\">\n            <Login />\n          </Route>\n          <Route path=\"/panel\">\n            <Header />\n          </Route>\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n};\n\nexport default App;\n","/home/shanil/web/ocean-fish-admin/src/components/Header.js",["52","53","54"],"import React from \"react\";\nimport { Form, FormControl, Nav, Navbar, Button } from \"react-bootstrap\";\n\nconst Header = () => {\n  return (\n    <Navbar bg=\"primary\" variant=\"dark\" expand=\"lg\">\n      <Navbar.Brand href=\"#home\">Ocean See Food</Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav className=\"mr-auto\">\n          <Nav.Link href=\"#home\">View Orders</Nav.Link>\n          <Nav.Link href=\"#item\">Item Management</Nav.Link>\n          <Nav.Link href=\"#user\">User Management</Nav.Link>\n          <Nav.Link href=\"#customer\">Customer Management</Nav.Link>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n};\n\nexport default Header;\n","/home/shanil/web/ocean-fish-admin/src/components/Login.js",["55"],"import { Formik } from \"formik\";\nimport React from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport './styling/LoginStyling.css'\nimport * as yup from 'yup';\nimport axios from \"axios\";\nimport { toast } from \"react-toastify\";\n\n\nconst loginSchema = yup.object({\n    username: yup.string().min(4).required(),\n    password: yup.string().min(6).required()\n});\n\n\nconst Login = () => {\n\n    const logInAdmin = (user) => {\n        axios.post('http://localhost:1234/api/v1/user/checkAdmin', user).\n            then(({ data }) => {\n                if (data.isDone) {\n                    toast(data.data, { type: 'success' });\n                } else {\n                    toast(data.data, { type: 'error' });\n                }\n            }).catch(err => {\n                toast(\"Error.Please Try again\", { type: 'error' });\n            })\n    }\n\n\n    return (\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-4 m-auto\">\n                    <Formik\n                        initialValues={{ username: '', password: '' }}\n                        validationSchema={loginSchema}\n                        onSubmit={(value, action) => {\n                            console.log(value);\n                            logInAdmin(value);\n                            action.resetForm();\n                        }}\n                    >\n                        {(props) => (\n                            <Form className=\"p-5 border mt-5\">\n                                <h4 className=\"mb-4 text-center\">Welcome Admin,</h4>\n                                <Form.Group controlId=\"formBasicEmail\">\n                                    <Form.Label>User Name</Form.Label>\n                                    <Form.Control type=\"text\" className=\"form-control form-control-sm\" au\n                                        onChange={props.handleChange('username')}\n                                        value={props.values.username}\n                                        onBlur={props.handleBlur('username')}\n                                        autoComplete=\"off\"\n                                    />\n                                    <Form.Text className=\"text-danger\">\n                                        {props.touched.username && props.errors.username}\n                                    </Form.Text>\n                                </Form.Group>\n                                <Form.Group controlId=\"formBasicPassword\">\n                                    <Form.Label>Password</Form.Label>\n                                    <Form.Control type=\"password\" className=\"form-control form-control-sm\"\n                                        onChange={props.handleChange('password')}\n                                        value={props.values.password}\n                                        onBlur={props.handleBlur('password')}\n                                        autoComplete=\"off\"\n                                    />\n                                    <Form.Text className=\"text-danger\">\n                                        {props.touched.password && props.errors.password}\n                                    </Form.Text>\n                                </Form.Group>\n                                <Button className=\"btn-sm mr-2\" variant=\"success\" type=\"submit\" onClick={props.handleSubmit}>\n                                    Submit\n                            </Button>\n                                <Button className=\"btn-sm\" variant=\"danger\" type=\"submit\" onClick={props.resetForm}>\n                                    Cancel\n                        </Button>\n                            </Form>\n                        )}\n                    </Formik>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Login;\n","/home/shanil/web/ocean-fish-admin/src/components/Customer.js",["56","57","58","59"],"import { Formik } from \"formik\";\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\n\nconst Customer = () => {\n    const [customers, setCustomers] = useState([]);\n    const [renderList, setRenderList] = useState([]);\n    const [customerDetail, setCustomerDetail] = useState({\n        customerName: '',\n        customerAddress: '',\n        customerMobile: '',\n        customerNIC: ''\n    });\n\n\n    const handleAdminSubmit = (customer) => {\n        axios.post('', customer).then(res => {\n\n        }).catch(err => {\n\n        })\n    }\n\n    const deleteCustomer = (id) => {\n        axios.delete(`http://localhost:1234/api/v1/customer/deleteCustomer/${id}`).then(res => {\n            loadAllCustomers();\n        }).catch(err => {\n\n        })\n    }\n\n    const updateCustomer = (e, id) => {\n        console.log(e, id);\n        const data = Array.prototype.slice.call(e.target.parentElement.parentElement.cells);\n        console.log(data);\n        if (data.length) {\n            const customerName = data[0].innerText;\n            const customerAddress = data[1].innerText;\n            const customerMobile = data[2].innerText;\n            const customerNIC = data[3].innerText;\n            setCustomerDetail({\n                customerName,\n                customerAddress,\n                customerMobile,\n                customerNIC,\n            })\n        }\n\n        // axios.put('http://localhost:1234/api/v1/customer/updateCustomer', customer).then(res => {\n\n        // }).catch(err => {\n\n        // })\n    }\n\n    const renderBasingInput = (e) => {\n        const userInput = e.target.value;\n        let list = [];\n        if (userInput !== '') {\n            customers.map((customer) => {\n                if (\n                    customer.customerName\n                        .toString()\n                        .toLowerCase()\n                        .startsWith(userInput.toLowerCase())\n                ) {\n                    list.push(customer);\n                }\n            });\n        } else {\n            list = customers;\n        }\n        setRenderList(list);\n    }\n\n    const loadAllCustomers = () => {\n        axios.get('http://localhost:1234/api/v1/customer/findAllCustomers').then(({ data }) => {\n            if (data.isDone) {\n                setRenderList(data.data);\n                setCustomers(data.data);\n            } else {\n                toast(\"Error please try again\", { type: 'error' });\n            }\n        }).catch(err => {\n            toast(\"Error please try again\", { type: 'error' });\n        })\n    }\n\n\n    const setToTheFormOnClick = (e) => {\n        console.log('clicked');\n        const data = Array.prototype.slice.call(e.target.parentElement.children);\n        if (data.length) {\n            const customerName = data[0].innerText;\n            const customerAddress = data[1].innerText;\n            const customerMobile = data[2].innerText;\n            const customerNIC = data[3].innerText;\n\n            setCustomerDetail({\n                customerName,\n                customerAddress,\n                customerMobile,\n                customerNIC,\n            })\n        }\n    }\n\n    useEffect(() => {\n        loadAllCustomers();\n    }, [])\n\n    return (\n\n        <div className=\"container\">\n            <div className=\"row mt-5\">\n                <div className=\"col-5\">\n                    <Formik\n                        initialValues={{ customerName: '', customerAddress: '', customerMobile: '', customerNIC: '' }}\n                        onSubmit={(value, action) => {\n                            console.log('Heyyy', value);\n                        }}\n\n\n                    >\n                        {(props) => (\n                            <form>\n                                <h3 className=\"blue-text\">Manage Customer</h3>\n                                <div className=\"form-group\">\n                                    <input type=\"text\" className=\"form-control\" aria-describedby=\"emailHelp\" placeholder=\"Customer Name\" value={props.values.customerName} onChange={props.handleChange('customerName')} onBlur={props.handleBlur('customerName')} value={props.values.customerName ? props.values.customerName : customerDetail.customerName} />\n                                </div>\n                                <div className=\"form-group\">\n                                    <input type=\"text\" className=\"form-control\" placeholder=\"Customer Address\" value={props.values.customerAddress ? props.values.customerAddress : customerDetail.customerAddress} onChange={props.handleChange('customerAddress')} onBlur={props.handleBlur('customerAddress')} />\n                                </div>\n                                <div className=\"form-group\">\n                                    <input type=\"text\" className=\"form-control\" placeholder=\"Customer NIC\" value={props.values.customerNIC ? props.values.customerNIC : customerDetail.customerNIC} onChange={props.handleChange('customerNIC')} onBlur={props.handleBlur('customerNIC')} />\n                                </div>\n                                <div className=\"form-group\">\n                                    <input type=\"text\" className=\"form-control\" placeholder=\"Customer Mobile\" value={props.values.customerMobile ? props.values.customerMobile : customerDetail.customerMobile} onChange={props.handleChange('customerMobile')} onBlur={props.handleBlur('customerMobile')} />\n                                </div>\n                                <Link class=\"waves-effect waves-light btn-small mr-4\" onClick={props.handleSubmit}><i class=\"material-icons left\">cloud</i>button</Link>\n                                <Link class=\"waves-effect waves-light btn-small\"><i class=\"material-icons left\">cloud</i>button</Link>\n                            </form>\n                        )}\n                    </Formik>\n                </div>\n                <div className=\"col-7\">\n                    <input placeholder=\"Type to search\" className=\"card-panel w-50 mb-4\" onChange={renderBasingInput} />\n                    <table>\n                        <thead className=\"text-white card-panel teal\">\n                            <tr>\n                                <th>Name</th>\n                                <th>Address</th>\n                                <th>Mobile</th>\n                                <th>NIC</th>\n                                <th>Delete</th>\n                                <th>Update</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {renderList && renderList.map(customer => {\n                                return <tr>\n                                    <td>{customer.customerName}</td>\n                                    <td>{customer.customerAddress}</td>\n                                    <td>{customer.customerMobile}</td>\n                                    <td>{customer.customerNIC}</td>\n                                    <td><button class=\"btn-sm btn-danger\" onClick={() => { deleteCustomer(customer._id) }}>Delete</button></td>\n                                    <td><button class=\"btn-sm btn-danger\" onClick={(e) => { updateCustomer(e, customer._id) }}>Delete</button></td>\n                                </tr>\n                            })}\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        </div>)\n}\n\nexport default Customer;\n","/home/shanil/web/ocean-fish-admin/src/components/Order.js",["60","61","62","63","64"],"import axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport OrderDetail from \"./OrderDetail\";\nimport { Button } from 'react-bootstrap';\n\nfunction Order() {\n    const [orders, setOrders] = useState([]);\n    const [orderStatus, setOrderStatus] = useState('pending');\n\n    useEffect(() => {\n        axios.get('http://localhost:1234/api/v1/order/getAllOrders').then(({ data }) => {\n            console.log(data.data);\n            if (data.isDone) {\n                setOrders(data.data);\n                console.log(\"adadad\", orders);\n            } else {\n\n            }\n        })\n    }, []);\n\n    return (\n        <div className=\"container\">\n            {orders.map(order => {\n                <OrderDetail orderDetail={order} />\n            })}\n        </div>\n    );\n}\n\nexport default Order;\n","/home/shanil/web/ocean-fish-admin/src/components/OrderDetail.js",["65","66","67"],"import React from \"react\";\nimport NumberFormat from \"react-number-format\";\n\nfunction OrderDetail({ orderDetail }) {\n  return (\n    <div className=\"col-5 s-5 m-5 m-auto\" key={orderDetail._id}>\n      <div className=\"card blue-grey light-1\">\n        <div className=\"card-content white-text\">\n          <p className=\"orange-text right\">{orderDetail._id}</p>\n          <p>Customer Name: {orderDetail?.customer?.customerName}</p>\n          <p>User Name: {orderDetail?.user?.userName}</p>\n          <p>Required Date: {orderDetail?.requiredDate.substring(0, 10)}</p>\n        </div>\n        <p className=\"center\">\n          <NumberFormat\n            value={orderDetail?.orderTotal}\n            displayType={\"text\"}\n            thousandSeparator={true}\n            prefix={\"Rs.\"}\n          />\n        </p>\n        <div className=\"card-action\">\n          <a href=\"#\">View Items</a>\n          <a href=\"#\">Accept Order</a>\n          <a href=\"#\">Delete Order</a>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default OrderDetail;\n","/home/shanil/web/ocean-fish-admin/src/components/OrderFilterForm.js",["68","69","70"],"import React, { useState } from \"react\";\nimport DatePicker from \"react-date-picker\";\nimport { Button } from 'react-bootstrap';\n\nfunction OrderFilterForm() {\n    const [value, onChange] = useState(new Date());\n    console.log(value);\n    return (\n            <div className=\"row\">\n                <div className=\"col\">\n                    <select name=\"\" id=\"\"></select>\n                </div>\n            </div>\n    );\n}\n\nexport default OrderFilterForm;\n",{"ruleId":"71","severity":1,"message":"72","line":5,"column":8,"nodeType":"73","messageId":"74","endLine":5,"endColumn":14},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"71","severity":1,"message":"79","line":1,"column":17,"nodeType":"73","messageId":"74","endLine":1,"endColumn":26},{"ruleId":"71","severity":1,"message":"80","line":7,"column":8,"nodeType":"73","messageId":"74","endLine":7,"endColumn":16},{"ruleId":"71","severity":1,"message":"81","line":10,"column":10,"nodeType":"73","messageId":"74","endLine":10,"endColumn":16},{"ruleId":"71","severity":1,"message":"82","line":11,"column":8,"nodeType":"73","messageId":"74","endLine":11,"endColumn":23},{"ruleId":"71","severity":1,"message":"83","line":22,"column":10,"nodeType":"73","messageId":"74","endLine":22,"endColumn":14},{"ruleId":"71","severity":1,"message":"84","line":22,"column":16,"nodeType":"73","messageId":"74","endLine":22,"endColumn":23},{"ruleId":"71","severity":1,"message":"85","line":2,"column":10,"nodeType":"73","messageId":"74","endLine":2,"endColumn":14},{"ruleId":"71","severity":1,"message":"86","line":2,"column":16,"nodeType":"73","messageId":"74","endLine":2,"endColumn":27},{"ruleId":"71","severity":1,"message":"81","line":2,"column":42,"nodeType":"73","messageId":"74","endLine":2,"endColumn":48},{"ruleId":"87","severity":1,"message":"88","line":19,"column":73,"nodeType":"89","messageId":"90","endLine":19,"endColumn":74,"fix":"91"},{"ruleId":"71","severity":1,"message":"92","line":18,"column":11,"nodeType":"73","messageId":"74","endLine":18,"endColumn":28},{"ruleId":"93","severity":1,"message":"94","line":62,"column":38,"nodeType":"95","messageId":"96","endLine":62,"endColumn":40},{"ruleId":"71","severity":1,"message":"97","line":92,"column":11,"nodeType":"73","messageId":"74","endLine":92,"endColumn":30},{"ruleId":"98","severity":1,"message":"99","line":131,"column":260,"nodeType":"100","endLine":131,"endColumn":351},{"ruleId":"71","severity":1,"message":"81","line":4,"column":10,"nodeType":"73","messageId":"74","endLine":4,"endColumn":16},{"ruleId":"71","severity":1,"message":"101","line":8,"column":12,"nodeType":"73","messageId":"74","endLine":8,"endColumn":23},{"ruleId":"71","severity":1,"message":"102","line":8,"column":25,"nodeType":"73","messageId":"74","endLine":8,"endColumn":39},{"ruleId":"103","severity":1,"message":"104","line":20,"column":8,"nodeType":"105","endLine":20,"endColumn":10,"suggestions":"106"},{"ruleId":"93","severity":1,"message":"94","line":24,"column":31,"nodeType":"95","messageId":"96","endLine":24,"endColumn":33},{"ruleId":"107","severity":1,"message":"108","line":23,"column":11,"nodeType":"109","endLine":23,"endColumn":23},{"ruleId":"107","severity":1,"message":"108","line":24,"column":11,"nodeType":"109","endLine":24,"endColumn":23},{"ruleId":"107","severity":1,"message":"108","line":25,"column":11,"nodeType":"109","endLine":25,"endColumn":23},{"ruleId":"71","severity":1,"message":"110","line":2,"column":8,"nodeType":"73","messageId":"74","endLine":2,"endColumn":18},{"ruleId":"71","severity":1,"message":"81","line":3,"column":10,"nodeType":"73","messageId":"74","endLine":3,"endColumn":16},{"ruleId":"71","severity":1,"message":"111","line":6,"column":19,"nodeType":"73","messageId":"74","endLine":6,"endColumn":27},"no-unused-vars","'Popper' is defined but never used.","Identifier","unusedVar","no-native-reassign",["112"],"no-negated-in-lhs",["113"],"'useEffect' is defined but never used.","'Customer' is defined but never used.","'Button' is defined but never used.","'OrderFilterForm' is defined but never used.","'text' is assigned a value but never used.","'setText' is assigned a value but never used.","'Form' is defined but never used.","'FormControl' is defined but never used.","dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"114","text":"115"},"'handleAdminSubmit' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'setToTheFormOnClick' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'orderStatus' is assigned a value but never used.","'setOrderStatus' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'orders'. Either include it or remove the dependency array.","ArrayExpression",["116"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'DatePicker' is defined but never used.","'onChange' is assigned a value but never used.","no-global-assign","no-unsafe-negation",[501,515],"\n            .",{"desc":"117","fix":"118"},"Update the dependencies array to be: [orders]",{"range":"119","text":"120"},[610,612],"[orders]"]