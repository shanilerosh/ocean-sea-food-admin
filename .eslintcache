[{"/home/shanil/web/ocean-fish-admin/src/index.js":"1","/home/shanil/web/ocean-fish-admin/src/App.js":"2","/home/shanil/web/ocean-fish-admin/src/components/Header.js":"3","/home/shanil/web/ocean-fish-admin/src/components/Login.js":"4","/home/shanil/web/ocean-fish-admin/src/components/Customer.js":"5","/home/shanil/web/ocean-fish-admin/src/components/Order.js":"6","/home/shanil/web/ocean-fish-admin/src/components/OrderDetail.js":"7","/home/shanil/web/ocean-fish-admin/src/components/OrderFilterForm.js":"8","/home/shanil/web/ocean-fish-admin/src/components/Item.js":"9","/home/shanil/web/ocean-fish-admin/src/components/User.js":"10","/home/shanil/web/ocean-fish-admin/src/components/context/AuthContextProvider.js":"11"},{"size":298,"mtime":1609930444135,"results":"12","hashOfConfig":"13"},{"size":1938,"mtime":1610407896696,"results":"14","hashOfConfig":"13"},{"size":785,"mtime":1610408265632,"results":"15","hashOfConfig":"13"},{"size":4137,"mtime":1610407103350,"results":"16","hashOfConfig":"13"},{"size":6692,"mtime":1610311417122,"results":"17","hashOfConfig":"13"},{"size":1092,"mtime":1610407947835,"results":"18","hashOfConfig":"13"},{"size":3068,"mtime":1610390041209,"results":"19","hashOfConfig":"13"},{"size":454,"mtime":1610217254549,"results":"20","hashOfConfig":"13"},{"size":6238,"mtime":1610408081068,"results":"21","hashOfConfig":"13"},{"size":7398,"mtime":1610408118339,"results":"22","hashOfConfig":"13"},{"size":470,"mtime":1610407288672,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"27"},"6vtc8o",{"filePath":"28","messages":"29","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"27"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"27"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"27"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/shanil/web/ocean-fish-admin/src/index.js",["51"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport Popper from \"popper.js\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n",["52","53"],"/home/shanil/web/ocean-fish-admin/src/App.js",["54","55","56","57","58","59"],"/home/shanil/web/ocean-fish-admin/src/components/Header.js",["60","61","62"],"/home/shanil/web/ocean-fish-admin/src/components/Login.js",["63","64"],"/home/shanil/web/ocean-fish-admin/src/components/Customer.js",[],"/home/shanil/web/ocean-fish-admin/src/components/Order.js",["65","66"],"/home/shanil/web/ocean-fish-admin/src/components/OrderDetail.js",["67","68"],"import React, { useState } from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport NumberFormat from \"react-number-format\";\nimport { Button } from \"react-bootstrap\";\nimport { Form, Table } from \"react-bootstrap\";\n\nfunction OrderDetail({ orderDetail }) {\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  return (\n    <div className=\"col-12 s-12 m-12\" key={orderDetail._id}>\n      <div className=\"card blue-grey light-1\">\n        <div className=\"card-content white-text\">\n          <p className=\"orange-text right\">{orderDetail._id}</p>\n          <p>Customer Name: {orderDetail?.customer?.customerName}</p>\n          <p>User Name: {orderDetail?.user?.userName}</p>\n          <p>Required Date: {orderDetail?.requiredDate.substring(0, 10)}</p>\n        </div>\n        <p className=\"ml-4\">\n          <NumberFormat\n            value={orderDetail?.orderTotal}\n            displayType={\"text\"}\n            thousandSeparator={true}\n            prefix={\"Rs.\"}\n          />\n        </p>\n        <div className=\"card-action\">\n          <a onClick={handleShow}>View Items</a>\n        </div>\n        <Modal\n          style={{ backgroundColor: \"transparent\", border: 0 }}\n          show={show}\n          onHide={handleClose}\n          backdrop=\"false\"\n        >\n          <Modal.Header closeButton>\n            <Modal.Title>List of Items</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <Table striped bordered hover>\n              <thead>\n                <tr>\n                  <th>Item Name</th>\n                  <th>Item Price</th>\n                  <th>Item Qty</th>\n                  <th>Total</th>\n                </tr>\n              </thead>\n              <tbody>\n                {orderDetail.items &&\n                  orderDetail.items.map((item) => {\n                    return (\n                      <tr key={item.itemId}>\n                        <td>{item.itemName}</td>\n                        <td>\n                          <NumberFormat\n                            value={item.itemPrice}\n                            displayType={\"text\"}\n                            thousandSeparator={true}\n                            prefix={\"Rs.\"}\n                          />\n                        </td>\n                        <td>{item.itemQty}</td>\n                        <td>\n                          <NumberFormat\n                            value={item.itemPrice * item.itemQty}\n                            displayType={\"text\"}\n                            thousandSeparator={true}\n                            prefix={\"Rs.\"}\n                          />\n                        </td>\n                      </tr>\n                    );\n                  })}\n              </tbody>\n            </Table>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={handleClose}>\n              Close\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </div>\n    </div>\n  );\n}\n\nexport default OrderDetail;\n","/home/shanil/web/ocean-fish-admin/src/components/OrderFilterForm.js",["69","70","71"],"import React, { useState } from \"react\";\nimport DatePicker from \"react-date-picker\";\nimport { Button } from 'react-bootstrap';\n\nfunction OrderFilterForm() {\n    const [value, onChange] = useState(new Date());\n    console.log(value);\n    return (\n            <div className=\"row\">\n                <div className=\"col\">\n                    <select name=\"\" id=\"\"></select>\n                </div>\n            </div>\n    );\n}\n\nexport default OrderFilterForm;\n","/home/shanil/web/ocean-fish-admin/src/components/Item.js",["72"],"/home/shanil/web/ocean-fish-admin/src/components/User.js",["73","74","75","76","77","78"],"import React, { useState, useEffect, useContext } from \"react\";\nimport { ButtonGroup, Dropdown, Form, Table } from 'react-bootstrap';\nimport { Button } from 'react-bootstrap';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport NumberFormat from \"react-number-format\";\nimport { useHistory } from 'react-router-dom';\nimport { UserAuth } from './context/AuthContextProvider';\n\nconst userSchema = yup.object({\n    username: yup.string().min(4).required(),\n    password: yup.string().min(8).required(),\n    monthlyTarget: yup.number().moreThan(10000).typeError(\"Montly target must be more that Rs.10,000\").required(),\n    state: yup.string().required(),\n})\n\nconst User = () => {\n    const history = useHistory();\n    const { validatedUser } = useContext(UserAuth);\n    const [users, setUsers] = useState([]);\n\n    useEffect(() => {\n        if (!validatedUser) {\n            history.push('/login');\n        }\n        loadUsers();\n    }, []);\n\n    const saveUser = (user) => {\n        console.log(\"befffffffff\", user)\n        axios.post('https://ocean-sea-food-api.herokuapp.com/api/v1/user/saveUser', user).then(({ data }) => {\n            console.log(data);\n            if (data.isDone) {\n                toast(\"Item Successfully Added\", { type: 'success' });\n                loadUsers();\n            } else {\n                toast(`${data.data}`, { type: 'error' });\n            }\n        }).catch(err => {\n            toast(\"Error please try again\", { type: 'error' });\n        })\n    }\n\n    const loadUsers = () => {\n        axios.get('https://ocean-sea-food-api.herokuapp.com/api/v1/user/getAllUsers').then(({ data }) => {\n            if (data.isDone) {\n                setUsers(data.data);\n            } else {\n                toast(\"Error please try again\", { type: 'error' });\n            }\n        }).catch(err => {\n            toast(\"Error please try again\", { type: 'error' });\n        })\n    }\n\n\n    const deleteUser = (id) => {\n        axios.post('https://ocean-sea-food-api.herokuapp.com/api/v1/user/deleteUser', { id }).then(({ data }) => {\n            if (data.isDone) {\n                loadUsers();\n                toast(\"Item has been deleted\", { type: 'error' });\n            } else {\n                toast(\"Error please try again\", { type: 'error' });\n            }\n        }).catch(err => {\n            toast(\"Error please try again\", { type: 'error' });\n        })\n    }\n\n    return (<div className=\"container mt-5\">\n        <div className=\"row\">\n            <div className=\"col-5\">\n                <Formik\n                    initialValues={{ username: '', password: '', monthlyTarget: '', state: 'active' }}\n                    validationSchema={userSchema}\n                    onSubmit={(value, action) => {\n                        saveUser(value);\n                        action.resetForm();\n                    }}>\n                    {(props) =>\n                        (<Form>\n                            <Form.Group controlId=\"formBasicEmail\">\n                                <Form.Label>User Name</Form.Label>\n                                <Form.Control type=\"text\" placeholder=\"Enter User Name\"\n                                    onChange={props.handleChange('username')}\n                                    value={props.values.username}\n                                    onBlur={props.handleBlur('username')}\n                                    autoComplete=\"off\"\n                                />\n                                <Form.Text className=\"text-danger\">\n                                    {props.touched.username && props.errors.username}\n                                </Form.Text>\n                            </Form.Group>\n                            <Form.Group controlId=\"formBasicPassword\">\n                                <Form.Label>Passsword</Form.Label>\n                                <Form.Control type=\"password\" placeholder=\"Password\"\n                                    onChange={props.handleChange('password')}\n                                    value={props.values.password}\n                                    onBlur={props.handleBlur('password')}\n                                    autoComplete=\"off\"\n                                />\n                                <Form.Text className=\"text-danger\">\n                                    {props.touched.password && props.errors.password}\n                                </Form.Text>\n                            </Form.Group>\n                            <Form.Group controlId=\"formtarget\">\n                                <Form.Label>Montly Target</Form.Label>\n                                <Form.Control type=\"text\" placeholder=\"Monthly Target\"\n                                    onChange={props.handleChange('monthlyTarget')}\n                                    value={props.values.monthlyTarget}\n                                    onBlur={props.handleBlur('monthlyTarget')}\n                                    autoComplete=\"off\"\n                                />\n                                <Form.Text className=\"text-danger\">\n                                    {props.touched.monthlyTarget && props.errors.monthlyTarget}\n                                </Form.Text>\n                            </Form.Group>\n                            <Button variant=\"primary\" type=\"submit\" className=\"mr-4\" onClick={props.handleSubmit}>\n                                Submit\n                            </Button>\n                            <Button variant=\"danger\" onClick={props.resetForm}>\n                                Cancel\n                            </Button>\n                        </Form>)\n                    }\n                </Formik>\n            </div>\n            <div className=\"col-7\">\n                <Table striped bordered hover>\n                    <thead>\n                        <tr>\n                            <th>User Name</th>\n                            <th>Role</th>\n                            <th>State</th>\n                            <th>Target</th>\n                            <th>Delete</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {users && users.map(usr => {\n                            return (\n                                <tr key={usr._id}>\n                                    <td>{usr.username}</td>\n                                    <td>{usr.role}</td>\n                                    <td>{usr.role == 'agent' ? <button className=\"btn btn-warning btn-sm\">{usr.state}</button> : 'Admin'}</td>\n                                    <td>{usr.role == 'agent' ? (<NumberFormat\n                                        value={usr.monthlyTarget}\n                                        displayType={\"text\"}\n                                        thousandSeparator={true}\n                                        prefix={\"Rs.\"}\n                                    />) : 'Admin'}</td>\n                                    <td>{usr.role == 'agent' ? (<button className=\"btn btn-danger btn-sm\" onClick={() => deleteUser(usr._id)}>Delete</button>) : \"Admin\"}</td>\n                                </tr>\n                            )\n                        })}\n                    </tbody>\n                </Table>\n            </div>\n        </div>\n    </div>);\n};\n\nexport default User;\n","/home/shanil/web/ocean-fish-admin/src/components/context/AuthContextProvider.js",[],{"ruleId":"79","severity":1,"message":"80","line":5,"column":8,"nodeType":"81","messageId":"82","endLine":5,"endColumn":14},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"79","severity":1,"message":"87","line":1,"column":17,"nodeType":"81","messageId":"82","endLine":1,"endColumn":26},{"ruleId":"79","severity":1,"message":"88","line":1,"column":28,"nodeType":"81","messageId":"82","endLine":1,"endColumn":36},{"ruleId":"79","severity":1,"message":"89","line":1,"column":38,"nodeType":"81","messageId":"82","endLine":1,"endColumn":48},{"ruleId":"79","severity":1,"message":"90","line":7,"column":8,"nodeType":"81","messageId":"82","endLine":7,"endColumn":16},{"ruleId":"79","severity":1,"message":"91","line":10,"column":10,"nodeType":"81","messageId":"82","endLine":10,"endColumn":16},{"ruleId":"79","severity":1,"message":"92","line":11,"column":8,"nodeType":"81","messageId":"82","endLine":11,"endColumn":23},{"ruleId":"79","severity":1,"message":"93","line":2,"column":10,"nodeType":"81","messageId":"82","endLine":2,"endColumn":14},{"ruleId":"79","severity":1,"message":"94","line":2,"column":16,"nodeType":"81","messageId":"82","endLine":2,"endColumn":27},{"ruleId":"79","severity":1,"message":"91","line":2,"column":42,"nodeType":"81","messageId":"82","endLine":2,"endColumn":48},{"ruleId":"79","severity":1,"message":"95","line":20,"column":13,"nodeType":"81","messageId":"82","endLine":20,"endColumn":26},{"ruleId":"96","severity":1,"message":"97","line":22,"column":92,"nodeType":"98","messageId":"99","endLine":22,"endColumn":93,"fix":"100"},{"ruleId":"79","severity":1,"message":"91","line":4,"column":10,"nodeType":"81","messageId":"82","endLine":4,"endColumn":16},{"ruleId":"101","severity":1,"message":"102","line":24,"column":8,"nodeType":"103","endLine":24,"endColumn":10,"suggestions":"104"},{"ruleId":"79","severity":1,"message":"93","line":5,"column":10,"nodeType":"81","messageId":"82","endLine":5,"endColumn":14},{"ruleId":"105","severity":1,"message":"106","line":29,"column":11,"nodeType":"107","endLine":29,"endColumn":35},{"ruleId":"79","severity":1,"message":"108","line":2,"column":8,"nodeType":"81","messageId":"82","endLine":2,"endColumn":18},{"ruleId":"79","severity":1,"message":"91","line":3,"column":10,"nodeType":"81","messageId":"82","endLine":3,"endColumn":16},{"ruleId":"79","severity":1,"message":"109","line":6,"column":19,"nodeType":"81","messageId":"82","endLine":6,"endColumn":27},{"ruleId":"101","severity":1,"message":"102","line":30,"column":8,"nodeType":"103","endLine":30,"endColumn":10,"suggestions":"110"},{"ruleId":"79","severity":1,"message":"111","line":2,"column":10,"nodeType":"81","messageId":"82","endLine":2,"endColumn":21},{"ruleId":"79","severity":1,"message":"112","line":2,"column":23,"nodeType":"81","messageId":"82","endLine":2,"endColumn":31},{"ruleId":"101","severity":1,"message":"102","line":29,"column":8,"nodeType":"103","endLine":29,"endColumn":10,"suggestions":"113"},{"ruleId":"114","severity":1,"message":"115","line":147,"column":51,"nodeType":"116","messageId":"117","endLine":147,"endColumn":53},{"ruleId":"114","severity":1,"message":"115","line":148,"column":51,"nodeType":"116","messageId":"117","endLine":148,"endColumn":53},{"ruleId":"114","severity":1,"message":"115","line":154,"column":51,"nodeType":"116","messageId":"117","endLine":154,"endColumn":53},"no-unused-vars","'Popper' is defined but never used.","Identifier","unusedVar","no-native-reassign",["118"],"no-negated-in-lhs",["119"],"'useEffect' is defined but never used.","'useState' is defined but never used.","'useContext' is defined but never used.","'Customer' is defined but never used.","'Button' is defined but never used.","'OrderFilterForm' is defined but never used.","'Form' is defined but never used.","'FormControl' is defined but never used.","'validatedUser' is assigned a value but never used.","dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"120","text":"121"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history' and 'validatedUser'. Either include them or remove the dependency array.","ArrayExpression",["122"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'DatePicker' is defined but never used.","'onChange' is assigned a value but never used.",["123"],"'ButtonGroup' is defined but never used.","'Dropdown' is defined but never used.",["124"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",[738,752],"\n            .",{"desc":"125","fix":"126"},{"desc":"125","fix":"127"},{"desc":"125","fix":"128"},"Update the dependencies array to be: [history, validatedUser]",{"range":"129","text":"130"},{"range":"131","text":"130"},{"range":"132","text":"130"},[855,857],"[history, validatedUser]",[874,876],[1015,1017]]